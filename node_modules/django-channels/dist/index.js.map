{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../src/event-target.mjs","../src/event.mjs","../node_modules/reconnecting-websocket/dist/reconnecting-websocket.mjs","index.js"],"names":["ReconnectingWebSocket","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","Event","type","target","ErrorEvent","_super","error","_this","call","message","CloseEvent","code","reason","wasClean","getGlobalWebSocket","WebSocket","isWebSocket","w","CLOSING","DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","debug","url","protocols","options","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","onclose","undefined","onerror","onmessage","onopen","_handleOpen","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","forEach","send","listener","_callEventListener","_handleMessage","_handleError","_disconnect","_connect","_handleClose","_clearTimeouts","_url","_protocols","defineProperty","get","enumerable","configurable","CONNECTING","OPEN","CLOSED","set","value","max","bytes","reduce","acc","length","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","reconnect","data","push","addEventListener","removeEventListener","filter","l","args","_i","arguments","console","log","apply","concat","_getNextDelay","_b","_c","_d","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","_removeListeners","_addListeners","_handleTimeout","handleEvent","Forwarder","forwardEvent","bind","EventTarget","dispatchEvent","Stream","name","socket","handleMessage","msg","JSON","parse","stream","e","MessageEvent","payload","origin","action","stringify","WebSocketBridge","streams","scheme","window","location","base_url","host","cb","streamName"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w === 'function' && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = this;\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = undefined;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = undefined;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = undefined;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = undefined;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            // @ts-ignore\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                // @ts-ignore\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.readyState : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            this._debug('enqueue', data);\r\n            this._messageQueue.push(data);\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, ['RWS>'].concat(args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = minReconnectionDelay;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                _this._connectLock = false;\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            // @ts-ignore\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n","\"use strict\";\n\nimport 'regenerator-runtime/runtime';\nimport { EventTarget, defineEventAttribute } from \"event-target-shim\";\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\n\nclass Forwarder extends EventTarget {\n  constructor() {\n    super();\n    this.forwardEvent = this.forwardEvent.bind(this);\n  }\n\n  forwardEvent(event) {\n    //console.log(`forwarding ${event.type}`);\n    this.dispatchEvent(event);\n  }\n}\n/**\n * Handle messages to and from a specific stream.\n *\n * @example\n * const stream = new Stream(\"streamName\", websocket);\n * stream.send({prop1: 'value1', prop2: 'value2'})\n */\nexport class Stream extends Forwarder {\n  /**\n   *\n   * @param {String} name The stream name\n   * @param {ReconnectingWebSocket} socket An instance of `ReconnectingWebSocket`\n   *\n   * @example\n   * const stream = new Stream(\"streamName\", websocket);\n   */\n  constructor(name, socket) {\n    super();\n    this.name = name;\n    this.socket = socket;\n    this.handleMessage = this.handleMessage.bind(this);\n    this.socket.addEventListener(\"message\", this.handleMessage);\n    this.socket.addEventListener(\"open\", this.forwardEvent);\n    this.socket.addEventListener(\"close\", this.forwardEvent);\n    this.socket.addEventListener(\"error\", this.forwardEvent);\n  }\n\n  handleMessage(event) {\n    const msg = JSON.parse(event.data);\n    if (msg.stream === this.name) {\n      const e = new MessageEvent(\n        'message', {\n          data: msg.payload,\n          origin: this.name\n        }\n      );\n      this.dispatchEvent(e);\n    }\n  }\n\n  /**\n   * Sends a message to the reply channel.\n   *\n   * @param      {Object}  action     The message\n   *\n   * @example\n   * Stream(\"myStream\", ws).send({prop1: 'value1', prop2: 'value2'});\n   */\n  send(action) {\n      const msg = {\n        stream: this.name,\n        payload: action,\n      };\n      this.socket.send(JSON.stringify(msg));\n  }\n}\ndefineEventAttribute(Stream.prototype, \"open\");\ndefineEventAttribute(Stream.prototype, \"close\");\ndefineEventAttribute(Stream.prototype, \"error\");\ndefineEventAttribute(Stream.prototype, \"message\");\n\n/**\n * Bridge between Channels and plain javascript.\n *\n * @example\n * const webSocketBridge = new WebSocketBridge();\n * webSocketBridge.connect(\"http://example.com/ws/\");\n * webSocketBridge.addEventListener(\"message\", function(event) {\n *   console.log(event.data);\n * });\n */\nexport class WebSocketBridge extends Forwarder {\n  constructor(options) {\n    super();\n    this.socket = null;\n    this.streams = {};\n    this.options = {...options};\n    this.handleMessage = this.handleMessage.bind(this);\n}\n\n  /**\n   * Connect to the websocket server\n   *\n   * @param      {String}  [url]     The url of the websocket. Defaults to\n   * `window.location.host`\n   * @param      {String[]|String}  [protocols] Optional string or array of protocols.\n   * @param      {Object} options Object of options for [`reconnecting-websocket`](https://github.com/joewalnes/reconnecting-websocket#options-1).\n   * @example\n   * const webSocketBridge = new WebSocketBridge();\n   * webSocketBridge.connect(\"http://example.com/ws/\");\n   */\n  connect(url, protocols, options) {\n    let _url;\n    // Use wss:// if running on https://\n    const scheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n    let base_url = `${scheme}://${window.location.host}`;\n    if (url === undefined) {\n      _url = base_url;\n    } else {\n      // Support relative URLs\n      if (url[0] == '/') {\n        _url = `${base_url}${url}`;\n      } else {\n        _url = url;\n      }\n    }\n    this.socket = new ReconnectingWebSocket(_url, protocols, options);\n    this.socket.addEventListener(\"open\", this.forwardEvent);\n    this.socket.addEventListener(\"close\", this.forwardEvent);\n    this.socket.addEventListener(\"error\", this.forwardEvent);\n    this.socket.addEventListener(\"message\", this.handleMessage);\n\n  }\n\n  handleMessage(event) {\n    const msg = JSON.parse(event.data);\n\n    if (msg.stream === undefined) {\n      const e = new MessageEvent(\n        'message', {\n          data: msg,\n          origin: ''\n        }\n      );\n      this.dispatchEvent(e);\n    }\n  }\n\n  /**\n   * Adds a 'stream handler' callback. Messages coming from the specified stream\n   * will call the specified callback.\n   * Essentianlly, this is a shortcut for `stream(streamName).addEventListener(\"message\", callback)`;\n   *\n   * @param      {String}    stream  The stream name\n   * @param      {Function}  cb      Callback to be execute when a message\n   * arrives. The callback will receive `action` and `stream` parameters.\n\n   * @example\n   * const webSocketBridge = new WebSocketBridge();\n   * webSocketBridge.connect(\"http://example.com/ws/\");\n   * webSocketBridge.demultiplex('mystream', function(action, stream) {\n   *   console.log(action, stream);\n   * });\n   * webSocketBridge.demultiplex('myotherstream', function(action, stream) {\n   *   console.info(action, stream);\n   * });\n   */\n  demultiplex(stream, cb) {\n    this.stream(stream).addEventListener(\"message\", cb);\n  }\n\n  /**\n   * Sends a message to the reply channel.\n   *\n   * @param      {Object}  msg     The message\n   *\n   * @example\n   * webSocketBridge.send({prop1: 'value1', prop2: 'value2'});\n   */\n  send(msg) {\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  /**\n   * Returns a Stream to send and receive messages to and from a specific streamName\n   *\n   * @param      {String}  streamName  The streamName name\n   * @return     {Stream}  Stream object bound to stream `streamName`.\n   * @example\n   * webSocketBridge.stream('mystream').send({prop1: 'value1', prop2: 'value1'})\n   */\n  stream(streamName) {\n    let stream;\n    if (this.streams[streamName] !== undefined) {\n      stream = this.streams[streamName];\n    } else {\n      stream = new Stream(streamName, this.socket);\n      this.streams[streamName] = stream;\n    }\n    return stream;\n  }\n}\ndefineEventAttribute(WebSocketBridge.prototype, \"open\");\ndefineEventAttribute(WebSocketBridge.prototype, \"close\");\ndefineEventAttribute(WebSocketBridge.prototype, \"error\");\ndefineEventAttribute(WebSocketBridge.prototype, \"message\");\n"]}